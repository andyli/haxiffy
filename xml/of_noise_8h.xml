<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="of_noise_8h" kind="file">
    <compoundname>ofNoise.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" prot="public" static="no">
        <name>FASTFLOOR</name>
        <param><defname>x</defname></param>
        <initializer>( ((x)&gt;0) ? ((int)x) : (((int)x)-1) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="54" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="of_noise_8h_1a5368759862ac5fb38772b91eace1205c" prot="public" static="no">
        <name>F2</name>
        <initializer>0.366025403f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="192"/>
      </memberdef>
      <memberdef kind="define" id="of_noise_8h_1ae62138575e5117b9426bd8bb1830e036" prot="public" static="no">
        <name>G2</name>
        <initializer>0.211324865f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="193"/>
      </memberdef>
      <memberdef kind="define" id="of_noise_8h_1a79fc770a19406e6876ff9ffd6ce66f3d" prot="public" static="no">
        <name>F3</name>
        <initializer>0.333333333f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="264"/>
      </memberdef>
      <memberdef kind="define" id="of_noise_8h_1aa18956b1e077aaf1b24bcb4b7eb841f5" prot="public" static="no">
        <name>G3</name>
        <initializer>0.166666667f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="265"/>
      </memberdef>
      <memberdef kind="define" id="of_noise_8h_1a7fd7918aa90b0ce1dc7ca9fe7a00e9fb" prot="public" static="no">
        <name>F4</name>
        <initializer>0.309016994f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="366"/>
      </memberdef>
      <memberdef kind="define" id="of_noise_8h_1a6f984a8b01aafc34122cc8bc0d9d5691" prot="public" static="no">
        <name>G4</name>
        <initializer>0.138196601f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="367"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" prot="public" static="yes" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char perm[512]</definition>
        <argsstring>[512]</argsstring>
        <name>perm</name>
        <initializer> {151,160,137,91,90,15,
  131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
  190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
  88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
  77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
  102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
  135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
  5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
  223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
  129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
  251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
  49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
  138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,
  151,160,137,91,90,15,
  131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
  190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
  88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
  77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
  102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
  135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
  5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
  223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
  129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
  251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
  49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
  138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="104" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" prot="public" static="yes" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char simplex[64][4]</definition>
        <argsstring>[64][4]</argsstring>
        <name>simplex</name>
        <initializer> {
    {0,1,2,3},{0,1,3,2},{0,0,0,0},{0,2,3,1},{0,0,0,0},{0,0,0,0},{0,0,0,0},{1,2,3,0},
    {0,2,1,3},{0,0,0,0},{0,3,1,2},{0,3,2,1},{0,0,0,0},{0,0,0,0},{0,0,0,0},{1,3,2,0},
    {0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},
    {1,2,0,3},{0,0,0,0},{1,3,0,2},{0,0,0,0},{0,0,0,0},{0,0,0,0},{2,3,0,1},{2,3,1,0},
    {1,0,2,3},{1,0,3,2},{0,0,0,0},{0,0,0,0},{0,0,0,0},{2,0,3,1},{0,0,0,0},{2,1,3,0},
    {0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},
    {2,0,1,3},{0,0,0,0},{0,0,0,0},{0,0,0,0},{3,0,1,2},{3,0,2,1},{0,0,0,0},{3,1,2,0},
    {2,1,0,3},{0,0,0,0},{0,0,0,0},{0,0,0,0},{3,1,0,2},{0,0,0,0},{3,2,0,1},{3,2,1,0}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="163" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="of_noise_8h_1a9193dd2c62266f000175e0ce580c2a01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float grad1</definition>
        <argsstring>(int hash, float x)</argsstring>
        <name>grad1</name>
        <param>
          <type>int</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="123" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="of_noise_8h_1a4874f8911ec7cd5385804a48f4fdd44d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float grad2</definition>
        <argsstring>(int hash, float x, float y)</argsstring>
        <name>grad2</name>
        <param>
          <type>int</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="130" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="of_noise_8h_1a4c90dfdf6b6429fd1c8a4646ca696a63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float grad3</definition>
        <argsstring>(int hash, float x, float y, float z)</argsstring>
        <name>grad3</name>
        <param>
          <type>int</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="137" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float grad4</definition>
        <argsstring>(int hash, float x, float y, float z, float t)</argsstring>
        <name>grad4</name>
        <param>
          <type>int</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="144" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="of_noise_8h_1a8a987552ee102dcd73661562330d08ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float _slang_library_noise1</definition>
        <argsstring>(float x)</argsstring>
        <name>_slang_library_noise1</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="167" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="166" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="of_noise_8h_1a427ae89836e1f77fb6f9d0b98b4d3816" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float _slang_library_noise2</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>_slang_library_noise2</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="191" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="190" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="of_noise_8h_1aa9254561fb07b42dc0af1f9abf4ea447" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float _slang_library_noise3</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>_slang_library_noise3</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="262" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="261" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="of_noise_8h_1a674ae2ae0d2f47aac373b4933dd8f457" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float _slang_library_noise4</definition>
        <argsstring>(float x, float y, float z, float w)</argsstring>
        <name>_slang_library_noise4</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" line="364" bodyfile="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h" bodystart="363" bodyend="499"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C implementation of Perlin Simplex Noise over 1,2,3, and 4 dimensions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Stefan Gustavson (<ulink url="mailto:stegu@itn.liu.se">stegu@itn.liu.se</ulink>) </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Mesa<sp/>3-D<sp/>graphics<sp/>library</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Version:<sp/><sp/>6.5</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2006<sp/><sp/>Brian<sp/>Paul<sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>BRIAN<sp/>PAUL<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>SimplexNoise1234</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2005,<sp/>Stefan<sp/>Gustavson</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Contact:<sp/>stegu@itn.liu.se</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>This<sp/>implementation<sp/>is<sp/>&quot;Simplex<sp/>Noise&quot;<sp/>as<sp/>presented<sp/>by</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Ken<sp/>Perlin<sp/>at<sp/>a<sp/>relatively<sp/>obscure<sp/>and<sp/>not<sp/>often<sp/>cited<sp/>course</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>session<sp/>&quot;Real-Time<sp/>Shading&quot;<sp/>at<sp/>Siggraph<sp/>2001<sp/>(before<sp/>real</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>time<sp/>shading<sp/>actually<sp/>took<sp/>on),<sp/>under<sp/>the<sp/>title<sp/>&quot;hardware<sp/>noise&quot;.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>The<sp/>3D<sp/>function<sp/>is<sp/>numerically<sp/>equivalent<sp/>to<sp/>his<sp/>Java<sp/>reference</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>code<sp/>available<sp/>in<sp/>the<sp/>PDF<sp/>course<sp/>notes,<sp/>although<sp/>I<sp/>re-implemented</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>it<sp/>from<sp/>scratch<sp/>to<sp/>get<sp/>more<sp/>readable<sp/>code.<sp/>The<sp/>1D,<sp/>2D<sp/>and<sp/>4D<sp/>cases</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>were<sp/>implemented<sp/>from<sp/>scratch<sp/>by<sp/>me<sp/>from<sp/>Ken<sp/>Perlin&apos;s<sp/>text.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>has<sp/>no<sp/>dependencies<sp/>on<sp/>any<sp/>other<sp/>file,<sp/>not<sp/>even<sp/>its<sp/>own</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>header<sp/>file.<sp/>The<sp/>header<sp/>file<sp/>is<sp/>made<sp/>for<sp/>use<sp/>by<sp/>external<sp/>code<sp/>only.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FASTFLOOR(x)<sp/>(<sp/>((x)&gt;0)<sp/>?<sp/>((int)x)<sp/>:<sp/>(((int)x)-1)<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Static<sp/>data</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>Permutation<sp/>table.<sp/>This<sp/>is<sp/>just<sp/>a<sp/>random<sp/>jumble<sp/>of<sp/>all<sp/>numbers<sp/>0-255,</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>repeated<sp/>twice<sp/>to<sp/>avoid<sp/>wrapping<sp/>the<sp/>index<sp/>at<sp/>255<sp/>for<sp/>each<sp/>lookup.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>exactly<sp/>the<sp/>same<sp/>for<sp/>all<sp/>instances<sp/>on<sp/>all<sp/>platforms,</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>so<sp/>it&apos;s<sp/>easiest<sp/>to<sp/>just<sp/>keep<sp/>it<sp/>as<sp/>static<sp/>explicit<sp/>data.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>This<sp/>also<sp/>removes<sp/>the<sp/>need<sp/>for<sp/>any<sp/>initialisation<sp/>of<sp/>this<sp/>class.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>making<sp/>this<sp/>an<sp/>int[]<sp/>instead<sp/>of<sp/>a<sp/>char[]<sp/>might<sp/>make<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>code<sp/>run<sp/>faster<sp/>on<sp/>platforms<sp/>with<sp/>a<sp/>high<sp/>penalty<sp/>for<sp/>unaligned<sp/>single</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>byte<sp/>addressing.<sp/>Intel<sp/>x86<sp/>is<sp/>generally<sp/>single-byte-friendly,<sp/>but</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>some<sp/>other<sp/>CPUs<sp/>are<sp/>faster<sp/>with<sp/>4-aligned<sp/>reads.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>However,<sp/>a<sp/>char[]<sp/>is<sp/>smaller,<sp/>which<sp/>avoids<sp/>cache<sp/>trashing,<sp/>and<sp/>that</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>is<sp/>probably<sp/>the<sp/>most<sp/>important<sp/>aspect<sp/>on<sp/>most<sp/>architectures.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>This<sp/>array<sp/>is<sp/>accessed<sp/>a<sp/>*lot*<sp/>by<sp/>the<sp/>noise<sp/>functions.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>A<sp/>vector-valued<sp/>noise<sp/>over<sp/>3D<sp/>accesses<sp/>it<sp/>96<sp/>times,<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>float-valued<sp/>4D<sp/>noise<sp/>64<sp/>times.<sp/>We<sp/>want<sp/>this<sp/>to<sp/>fit<sp/>in<sp/>the<sp/>cache!</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[512]<sp/>=<sp/>{151,160,137,91,90,15,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>190,<sp/>6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>88,237,149,56,87,174,20,125,136,171,168,<sp/>68,175,74,165,71,134,139,48,27,166,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>102,143,54,<sp/>65,25,63,161,<sp/>1,216,80,73,209,76,132,187,208,<sp/>89,18,169,200,196,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>135,130,116,188,159,86,164,100,109,198,173,186,<sp/>3,64,52,217,226,250,124,123,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>223,183,170,213,119,248,152,<sp/>2,44,154,163,<sp/>70,221,153,101,155,167,<sp/>43,172,9,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>129,22,39,253,<sp/>19,98,108,110,79,113,224,232,178,185,<sp/>112,104,218,246,97,228,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>251,34,242,193,238,210,144,12,191,179,162,241,<sp/>81,51,145,235,249,14,239,107,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>49,192,214,<sp/>31,181,199,106,157,184,<sp/>84,204,176,115,121,50,45,127,<sp/>4,150,254,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>151,160,137,91,90,15,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>190,<sp/>6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>88,237,149,56,87,174,20,125,136,171,168,<sp/>68,175,74,165,71,134,139,48,27,166,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>102,143,54,<sp/>65,25,63,161,<sp/>1,216,80,73,209,76,132,187,208,<sp/>89,18,169,200,196,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>135,130,116,188,159,86,164,100,109,198,173,186,<sp/>3,64,52,217,226,250,124,123,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>223,183,170,213,119,248,152,<sp/>2,44,154,163,<sp/>70,221,153,101,155,167,<sp/>43,172,9,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>129,22,39,253,<sp/>19,98,108,110,79,113,224,232,178,185,<sp/>112,104,218,246,97,228,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>251,34,242,193,238,210,144,12,191,179,162,241,<sp/>81,51,145,235,249,14,239,107,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>49,192,214,<sp/>31,181,199,106,157,184,<sp/>84,204,176,115,121,50,45,127,<sp/>4,150,254,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>Helper<sp/>functions<sp/>to<sp/>compute<sp/>gradients-dot-residualvectors<sp/>(1D<sp/>to<sp/>4D)</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>these<sp/>generate<sp/>gradients<sp/>of<sp/>more<sp/>than<sp/>unit<sp/>length.<sp/>To<sp/>make</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>a<sp/>close<sp/>match<sp/>with<sp/>the<sp/>value<sp/>range<sp/>of<sp/>classic<sp/>Perlin<sp/>noise,<sp/>the<sp/>final</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>noise<sp/>values<sp/>need<sp/>to<sp/>be<sp/>rescaled<sp/>to<sp/>fit<sp/>nicely<sp/>within<sp/>[-1,1].</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>(The<sp/>simplex<sp/>noise<sp/>functions<sp/>as<sp/>such<sp/>also<sp/>have<sp/>different<sp/>scaling.)</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>Note<sp/>also<sp/>that<sp/>these<sp/>noise<sp/>functions<sp/>are<sp/>the<sp/>most<sp/>practical<sp/>and<sp/>useful</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>signed<sp/>version<sp/>of<sp/>Perlin<sp/>noise.<sp/>To<sp/>return<sp/>values<sp/>according<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>RenderMan<sp/>specification<sp/>from<sp/>the<sp/>SL<sp/>noise()<sp/>and<sp/>pnoise()<sp/>functions,</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>the<sp/>noise<sp/>values<sp/>need<sp/>to<sp/>be<sp/>scaled<sp/>and<sp/>offset<sp/>to<sp/>[0,1],<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>float<sp/>SLnoise<sp/>=<sp/>(SimplexNoise1234::noise(x,y,z)<sp/>+<sp/>1.0)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="of_noise_8h_1a9193dd2c62266f000175e0ce580c2a01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="of_noise_8h_1a9193dd2c62266f000175e0ce580c2a01" kindref="member">grad1</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>hash<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grad<sp/>=<sp/>1.0f<sp/>+<sp/>(h<sp/>&amp;<sp/>7);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gradient<sp/>value<sp/>1.0,<sp/>2.0,<sp/>...,<sp/>8.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h&amp;8)<sp/>grad<sp/>=<sp/>-grad;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>a<sp/>random<sp/>sign<sp/>for<sp/>the<sp/>gradient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>grad<sp/>*<sp/>x<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiply<sp/>the<sp/>gradient<sp/>with<sp/>the<sp/>distance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="of_noise_8h_1a4874f8911ec7cd5385804a48f4fdd44d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="of_noise_8h_1a4874f8911ec7cd5385804a48f4fdd44d" kindref="member">grad2</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>hash<sp/>&amp;<sp/>7;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>low<sp/>3<sp/>bits<sp/>of<sp/>hash<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>h&lt;4<sp/>?<sp/>x<sp/>:<sp/>y;<sp/><sp/></highlight><highlight class="comment">/*<sp/>into<sp/>8<sp/>simple<sp/>gradient<sp/>directions,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>h&lt;4<sp/>?<sp/>y<sp/>:<sp/>x;<sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>compute<sp/>the<sp/>dot<sp/>product<sp/>with<sp/>(x,y).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((h&amp;1)?<sp/>-u<sp/>:<sp/>u)<sp/>+<sp/>((h&amp;2)?<sp/>-2.0f*v<sp/>:<sp/>2.0f*v);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="of_noise_8h_1a4c90dfdf6b6429fd1c8a4646ca696a63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="of_noise_8h_1a4c90dfdf6b6429fd1c8a4646ca696a63" kindref="member">grad3</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>hash<sp/>&amp;<sp/>15;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>low<sp/>4<sp/>bits<sp/>of<sp/>hash<sp/>code<sp/>into<sp/>12<sp/>simple<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>h&lt;8<sp/>?<sp/>x<sp/>:<sp/>y;<sp/></highlight><highlight class="comment">/*<sp/>gradient<sp/>directions,<sp/>and<sp/>compute<sp/>dot<sp/>product.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>h&lt;4<sp/>?<sp/>y<sp/>:<sp/>h==12||h==14<sp/>?<sp/>x<sp/>:<sp/>z;<sp/></highlight><highlight class="comment">/*<sp/>Fix<sp/>repeats<sp/>at<sp/>h<sp/>=<sp/>12<sp/>to<sp/>15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((h&amp;1)?<sp/>-u<sp/>:<sp/>u)<sp/>+<sp/>((h&amp;2)?<sp/>-v<sp/>:<sp/>v);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" kindref="member">grad4</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>hash<sp/>&amp;<sp/>31;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>low<sp/>5<sp/>bits<sp/>of<sp/>hash<sp/>code<sp/>into<sp/>32<sp/>simple<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>h&lt;24<sp/>?<sp/>x<sp/>:<sp/>y;<sp/></highlight><highlight class="comment">/*<sp/>gradient<sp/>directions,<sp/>and<sp/>compute<sp/>dot<sp/>product.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>h&lt;16<sp/>?<sp/>y<sp/>:<sp/>z;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>h&lt;8<sp/>?<sp/>z<sp/>:<sp/>t;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((h&amp;1)?<sp/>-u<sp/>:<sp/>u)<sp/>+<sp/>((h&amp;2)?<sp/>-v<sp/>:<sp/>v)<sp/>+<sp/>((h&amp;4)?<sp/>-w<sp/>:<sp/>w);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>lookup<sp/>table<sp/>to<sp/>traverse<sp/>the<sp/>simplex<sp/>around<sp/>a<sp/>given<sp/>point<sp/>in<sp/>4D.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Details<sp/>can<sp/>be<sp/>found<sp/>where<sp/>this<sp/>table<sp/>is<sp/>used,<sp/>in<sp/>the<sp/>4D<sp/>noise<sp/>method.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>This<sp/>should<sp/>not<sp/>be<sp/>required,<sp/>backport<sp/>it<sp/>from<sp/>Bill&apos;s<sp/>GLSL<sp/>code!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[64][4]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,1,2,3},{0,1,3,2},{0,0,0,0},{0,2,3,1},{0,0,0,0},{0,0,0,0},{0,0,0,0},{1,2,3,0},</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,2,1,3},{0,0,0,0},{0,3,1,2},{0,3,2,1},{0,0,0,0},{0,0,0,0},{0,0,0,0},{1,3,2,0},</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{1,2,0,3},{0,0,0,0},{1,3,0,2},{0,0,0,0},{0,0,0,0},{0,0,0,0},{2,3,0,1},{2,3,1,0},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{1,0,2,3},{1,0,3,2},{0,0,0,0},{0,0,0,0},{0,0,0,0},{2,0,3,1},{0,0,0,0},{2,1,3,0},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{2,0,1,3},{0,0,0,0},{0,0,0,0},{0,0,0,0},{3,0,1,2},{3,0,2,1},{0,0,0,0},{3,1,2,0},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{2,1,0,3},{0,0,0,0},{0,0,0,0},{0,0,0,0},{3,1,0,2},{0,0,0,0},{3,2,0,1},{3,2,1,0}};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>1D<sp/>simplex<sp/>noise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="of_noise_8h_1a8a987552ee102dcd73661562330d08ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="of_noise_8h_1a8a987552ee102dcd73661562330d08ec" kindref="member">_slang_library_noise1</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(x);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1<sp/>=<sp/>i0<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>x<sp/>-<sp/>i0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>x0<sp/>-<sp/>1.0f;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>1.0f<sp/>-<sp/>x1*x1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n0,<sp/>n1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>1.0f<sp/>-<sp/>x0*x0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>if(t0<sp/>&lt;<sp/>0.0f)<sp/>t0<sp/>=<sp/>0.0f;<sp/>//<sp/>this<sp/>never<sp/>happens<sp/>for<sp/>the<sp/>1D<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>t0<sp/>*=<sp/>t0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>n0<sp/>=<sp/>t0<sp/>*<sp/>t0<sp/>*<sp/><ref refid="of_noise_8h_1a9193dd2c62266f000175e0ce580c2a01" kindref="member">grad1</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[i0<sp/>&amp;<sp/>0xff],<sp/>x0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>if(t1<sp/>&lt;<sp/>0.0f)<sp/>t1<sp/>=<sp/>0.0f;<sp/>//<sp/>this<sp/>never<sp/>happens<sp/>for<sp/>the<sp/>1D<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>t1<sp/>*=<sp/>t1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>n1<sp/>=<sp/>t1<sp/>*<sp/>t1<sp/>*<sp/><ref refid="of_noise_8h_1a9193dd2c62266f000175e0ce580c2a01" kindref="member">grad1</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[i1<sp/>&amp;<sp/>0xff],<sp/>x1);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>maximum<sp/>value<sp/>of<sp/>this<sp/>noise<sp/>is<sp/>8*(3/4)^4<sp/>=<sp/>2.53125<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>factor<sp/>of<sp/>0.395<sp/>would<sp/>scale<sp/>to<sp/>fit<sp/>exactly<sp/>within<sp/>[-1,1],<sp/>but<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>want<sp/>to<sp/>match<sp/>PRMan&apos;s<sp/>1D<sp/>noise,<sp/>so<sp/>we<sp/>scale<sp/>it<sp/>down<sp/>some<sp/>more.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.25f<sp/>*<sp/>(n0<sp/>+<sp/>n1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>2D<sp/>simplex<sp/>noise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="of_noise_8h_1a427ae89836e1f77fb6f9d0b98b4d3816" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="of_noise_8h_1a427ae89836e1f77fb6f9d0b98b4d3816" kindref="member">_slang_library_noise2</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F2<sp/>0.366025403f<sp/></highlight><highlight class="comment">/*<sp/>F2<sp/>=<sp/>0.5*(sqrt(3.0)-1.0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>G2<sp/>0.211324865f<sp/></highlight><highlight class="comment">/*<sp/>G2<sp/>=<sp/>(3.0-Math.sqrt(3.0))/6.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n0,<sp/>n1,<sp/>n2;<sp/></highlight><highlight class="comment">/*<sp/>Noise<sp/>contributions<sp/>from<sp/>the<sp/>three<sp/>corners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skew<sp/>the<sp/>input<sp/>space<sp/>to<sp/>determine<sp/>which<sp/>simplex<sp/>cell<sp/>we&apos;re<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>(x+y)*<ref refid="of_noise_8h_1a5368759862ac5fb38772b91eace1205c" kindref="member">F2</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Hairy<sp/>factor<sp/>for<sp/>2D<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xs<sp/>=<sp/>x<sp/>+<sp/>s;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ys<sp/>=<sp/>y<sp/>+<sp/>s;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(xs);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(ys);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(float)(i+j)*<ref refid="of_noise_8h_1ae62138575e5117b9426bd8bb1830e036" kindref="member">G2</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>X0<sp/>=<sp/>i-t;<sp/></highlight><highlight class="comment">/*<sp/>Unskew<sp/>the<sp/>cell<sp/>origin<sp/>back<sp/>to<sp/>(x,y)<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Y0<sp/>=<sp/>j-t;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>x-X0;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>x,y<sp/>distances<sp/>from<sp/>the<sp/>cell<sp/>origin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>y-Y0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>jj;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0,<sp/>t1,<sp/>t2;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>2D<sp/>case,<sp/>the<sp/>simplex<sp/>shape<sp/>is<sp/>an<sp/>equilateral<sp/>triangle.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>which<sp/>simplex<sp/>we<sp/>are<sp/>in.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1,<sp/>j1;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>second<sp/>(middle)<sp/>corner<sp/>of<sp/>simplex<sp/>in<sp/>(i,j)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x0&gt;y0)<sp/>{i1=1;<sp/>j1=0;}<sp/></highlight><highlight class="comment">/*<sp/>lower<sp/>triangle,<sp/>XY<sp/>order:<sp/>(0,0)-&gt;(1,0)-&gt;(1,1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{i1=0;<sp/>j1=1;}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>upper<sp/>triangle,<sp/>YX<sp/>order:<sp/>(0,0)-&gt;(0,1)-&gt;(1,1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>step<sp/>of<sp/>(1,0)<sp/>in<sp/>(i,j)<sp/>means<sp/>a<sp/>step<sp/>of<sp/>(1-c,-c)<sp/>in<sp/>(x,y),<sp/>and<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>step<sp/>of<sp/>(0,1)<sp/>in<sp/>(i,j)<sp/>means<sp/>a<sp/>step<sp/>of<sp/>(-c,1-c)<sp/>in<sp/>(x,y),<sp/>where<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>c<sp/>=<sp/>(3-sqrt(3))/6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0<sp/>-<sp/>i1<sp/>+<sp/><ref refid="of_noise_8h_1ae62138575e5117b9426bd8bb1830e036" kindref="member">G2</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>middle<sp/>corner<sp/>in<sp/>(x,y)<sp/>unskewed<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0<sp/>-<sp/>j1<sp/>+<sp/>G2;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>x0<sp/>-<sp/>1.0f<sp/>+<sp/>2.0f<sp/>*<sp/>G2;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>last<sp/>corner<sp/>in<sp/>(x,y)<sp/>unskewed<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>y0<sp/>-<sp/>1.0f<sp/>+<sp/>2.0f<sp/>*<sp/>G2;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wrap<sp/>the<sp/>integer<sp/>indices<sp/>at<sp/>256,<sp/>to<sp/>avoid<sp/>indexing<sp/>perm[]<sp/>out<sp/>of<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>i<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>j<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>contribution<sp/>from<sp/>the<sp/>three<sp/>corners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>0.5f<sp/>-<sp/>x0*x0-y0*y0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t0<sp/>&lt;<sp/>0.0f)<sp/>n0<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>*=<sp/>t0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>t0<sp/>*<sp/>t0<sp/>*<sp/><ref refid="of_noise_8h_1a4874f8911ec7cd5385804a48f4fdd44d" kindref="member">grad2</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj]],<sp/>x0,<sp/>y0);<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>0.5f<sp/>-<sp/>x1*x1-y1*y1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t1<sp/>&lt;<sp/>0.0f)<sp/>n1<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>*=<sp/>t1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>t1<sp/>*<sp/>t1<sp/>*<sp/><ref refid="of_noise_8h_1a4874f8911ec7cd5385804a48f4fdd44d" kindref="member">grad2</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+i1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+j1]],<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>0.5f<sp/>-<sp/>x2*x2-y2*y2;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t2<sp/>&lt;<sp/>0.0f)<sp/>n2<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>*=<sp/>t2;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>t2<sp/>*<sp/>t2<sp/>*<sp/><ref refid="of_noise_8h_1a4874f8911ec7cd5385804a48f4fdd44d" kindref="member">grad2</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+1]],<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>contributions<sp/>from<sp/>each<sp/>corner<sp/>to<sp/>get<sp/>the<sp/>final<sp/>noise<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>result<sp/>is<sp/>scaled<sp/>to<sp/>return<sp/>values<sp/>in<sp/>the<sp/>interval<sp/>[-1,1].<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>40.0f<sp/>*<sp/>(n0<sp/>+<sp/>n1<sp/>+<sp/>n2);<sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>The<sp/>scale<sp/>factor<sp/>is<sp/>preliminary!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>3D<sp/>simplex<sp/>noise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="of_noise_8h_1aa9254561fb07b42dc0af1f9abf4ea447" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="of_noise_8h_1aa9254561fb07b42dc0af1f9abf4ea447" kindref="member">_slang_library_noise3</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Simple<sp/>skewing<sp/>factors<sp/>for<sp/>the<sp/>3D<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F3<sp/>0.333333333f</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>G3<sp/>0.166666667f</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n0,<sp/>n1,<sp/>n2,<sp/>n3;<sp/></highlight><highlight class="comment">/*<sp/>Noise<sp/>contributions<sp/>from<sp/>the<sp/>four<sp/>corners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skew<sp/>the<sp/>input<sp/>space<sp/>to<sp/>determine<sp/>which<sp/>simplex<sp/>cell<sp/>we&apos;re<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>(x+y+z)*<ref refid="of_noise_8h_1a79fc770a19406e6876ff9ffd6ce66f3d" kindref="member">F3</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Very<sp/>nice<sp/>and<sp/>simple<sp/>skew<sp/>factor<sp/>for<sp/>3D<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xs<sp/>=<sp/>x+s;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ys<sp/>=<sp/>y+s;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zs<sp/>=<sp/>z+s;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(xs);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(ys);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(zs);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(float)(i+j+k)*<ref refid="of_noise_8h_1aa18956b1e077aaf1b24bcb4b7eb841f5" kindref="member">G3</ref>;<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>X0<sp/>=<sp/>i-t;<sp/></highlight><highlight class="comment">/*<sp/>Unskew<sp/>the<sp/>cell<sp/>origin<sp/>back<sp/>to<sp/>(x,y,z)<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Y0<sp/>=<sp/>j-t;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Z0<sp/>=<sp/>k-t;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>x-X0;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>x,y,z<sp/>distances<sp/>from<sp/>the<sp/>cell<sp/>origin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>y-Y0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z0<sp/>=<sp/>z-Z0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/>y1,<sp/>z1,<sp/>x2,<sp/>y2,<sp/>z2,<sp/>x3,<sp/>y3,<sp/>z3;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>jj,<sp/>kk;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0,<sp/>t1,<sp/>t2,<sp/>t3;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>3D<sp/>case,<sp/>the<sp/>simplex<sp/>shape<sp/>is<sp/>a<sp/>slightly<sp/>irregular<sp/>tetrahedron.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>which<sp/>simplex<sp/>we<sp/>are<sp/>in.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1,<sp/>j1,<sp/>k1;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>second<sp/>corner<sp/>of<sp/>simplex<sp/>in<sp/>(i,j,k)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2,<sp/>j2,<sp/>k2;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>third<sp/>corner<sp/>of<sp/>simplex<sp/>in<sp/>(i,j,k)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>code<sp/>would<sp/>benefit<sp/>from<sp/>a<sp/>backport<sp/>from<sp/>the<sp/>GLSL<sp/>version!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x0&gt;=y0)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y0&gt;=z0)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>i1=1;<sp/>j1=0;<sp/>k1=0;<sp/>i2=1;<sp/>j2=1;<sp/>k2=0;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X<sp/>Y<sp/>Z<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x0&gt;=z0)<sp/>{<sp/>i1=1;<sp/>j1=0;<sp/>k1=0;<sp/>i2=1;<sp/>j2=0;<sp/>k2=1;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>X<sp/>Z<sp/>Y<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>i1=0;<sp/>j1=0;<sp/>k1=1;<sp/>i2=1;<sp/>j2=0;<sp/>k2=1;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>Z<sp/>X<sp/>Y<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>x0&lt;y0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y0&lt;z0)<sp/>{<sp/>i1=0;<sp/>j1=0;<sp/>k1=1;<sp/>i2=0;<sp/>j2=1;<sp/>k2=1;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>Z<sp/>Y<sp/>X<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x0&lt;z0)<sp/>{<sp/>i1=0;<sp/>j1=1;<sp/>k1=0;<sp/>i2=0;<sp/>j2=1;<sp/>k2=1;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>Y<sp/>Z<sp/>X<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>i1=0;<sp/>j1=1;<sp/>k1=0;<sp/>i2=1;<sp/>j2=1;<sp/>k2=0;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>Y<sp/>X<sp/>Z<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>step<sp/>of<sp/>(1,0,0)<sp/>in<sp/>(i,j,k)<sp/>means<sp/>a<sp/>step<sp/>of<sp/>(1-c,-c,-c)<sp/>in<sp/>(x,y,z),<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>step<sp/>of<sp/>(0,1,0)<sp/>in<sp/>(i,j,k)<sp/>means<sp/>a<sp/>step<sp/>of<sp/>(-c,1-c,-c)<sp/>in<sp/>(x,y,z),<sp/>and<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>step<sp/>of<sp/>(0,0,1)<sp/>in<sp/>(i,j,k)<sp/>means<sp/>a<sp/>step<sp/>of<sp/>(-c,-c,1-c)<sp/>in<sp/>(x,y,z),<sp/>where<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>c<sp/>=<sp/>1/6.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0<sp/>-<sp/>i1<sp/>+<sp/><ref refid="of_noise_8h_1aa18956b1e077aaf1b24bcb4b7eb841f5" kindref="member">G3</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>second<sp/>corner<sp/>in<sp/>(x,y,z)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0<sp/>-<sp/>j1<sp/>+<sp/>G3;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>z1<sp/>=<sp/>z0<sp/>-<sp/>k1<sp/>+<sp/>G3;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>x0<sp/>-<sp/>i2<sp/>+<sp/>2.0f*G3;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>third<sp/>corner<sp/>in<sp/>(x,y,z)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>y0<sp/>-<sp/>j2<sp/>+<sp/>2.0f*G3;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>z2<sp/>=<sp/>z0<sp/>-<sp/>k2<sp/>+<sp/>2.0f*G3;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>x3<sp/>=<sp/>x0<sp/>-<sp/>1.0f<sp/>+<sp/>3.0f*G3;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>last<sp/>corner<sp/>in<sp/>(x,y,z)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>y3<sp/>=<sp/>y0<sp/>-<sp/>1.0f<sp/>+<sp/>3.0f*G3;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>z3<sp/>=<sp/>z0<sp/>-<sp/>1.0f<sp/>+<sp/>3.0f*G3;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wrap<sp/>the<sp/>integer<sp/>indices<sp/>at<sp/>256,<sp/>to<sp/>avoid<sp/>indexing<sp/>perm[]<sp/>out<sp/>of<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>i<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>j<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>kk<sp/>=<sp/>k<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>contribution<sp/>from<sp/>the<sp/>four<sp/>corners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>0.6f<sp/>-<sp/>x0*x0<sp/>-<sp/>y0*y0<sp/>-<sp/>z0*z0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t0<sp/>&lt;<sp/>0.0f)<sp/>n0<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>*=<sp/>t0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>t0<sp/>*<sp/>t0<sp/>*<sp/><ref refid="of_noise_8h_1a4c90dfdf6b6429fd1c8a4646ca696a63" kindref="member">grad3</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk]]],<sp/>x0,<sp/>y0,<sp/>z0);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>0.6f<sp/>-<sp/>x1*x1<sp/>-<sp/>y1*y1<sp/>-<sp/>z1*z1;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t1<sp/>&lt;<sp/>0.0f)<sp/>n1<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>*=<sp/>t1;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>t1<sp/>*<sp/>t1<sp/>*<sp/><ref refid="of_noise_8h_1a4c90dfdf6b6429fd1c8a4646ca696a63" kindref="member">grad3</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+i1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+j1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+k1]]],<sp/>x1,<sp/>y1,<sp/>z1);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>0.6f<sp/>-<sp/>x2*x2<sp/>-<sp/>y2*y2<sp/>-<sp/>z2*z2;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t2<sp/>&lt;<sp/>0.0f)<sp/>n2<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>*=<sp/>t2;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>t2<sp/>*<sp/>t2<sp/>*<sp/><ref refid="of_noise_8h_1a4c90dfdf6b6429fd1c8a4646ca696a63" kindref="member">grad3</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+i2+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+j2+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+k2]]],<sp/>x2,<sp/>y2,<sp/>z2);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>t3<sp/>=<sp/>0.6f<sp/>-<sp/>x3*x3<sp/>-<sp/>y3*y3<sp/>-<sp/>z3*z3;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t3&lt;0.0f)<sp/>n3<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t3<sp/>*=<sp/>t3;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n3<sp/>=<sp/>t3<sp/>*<sp/>t3<sp/>*<sp/><ref refid="of_noise_8h_1a4c90dfdf6b6429fd1c8a4646ca696a63" kindref="member">grad3</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+1]]],<sp/>x3,<sp/>y3,<sp/>z3);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>contributions<sp/>from<sp/>each<sp/>corner<sp/>to<sp/>get<sp/>the<sp/>final<sp/>noise<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>result<sp/>is<sp/>scaled<sp/>to<sp/>stay<sp/>just<sp/>inside<sp/>[-1,1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>32.0f<sp/>*<sp/>(n0<sp/>+<sp/>n1<sp/>+<sp/>n2<sp/>+<sp/>n3);<sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>The<sp/>scale<sp/>factor<sp/>is<sp/>preliminary!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4D<sp/>simplex<sp/>noise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="of_noise_8h_1a674ae2ae0d2f47aac373b4933dd8f457" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="of_noise_8h_1a674ae2ae0d2f47aac373b4933dd8f457" kindref="member">_slang_library_noise4</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>skewing<sp/>and<sp/>unskewing<sp/>factors<sp/>are<sp/>hairy<sp/>again<sp/>for<sp/>the<sp/>4D<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F4<sp/>0.309016994f<sp/></highlight><highlight class="comment">/*<sp/>F4<sp/>=<sp/>(Math.sqrt(5.0)-1.0)/4.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>G4<sp/>0.138196601f<sp/></highlight><highlight class="comment">/*<sp/>G4<sp/>=<sp/>(5.0-Math.sqrt(5.0))/20.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n0,<sp/>n1,<sp/>n2,<sp/>n3,<sp/>n4;<sp/></highlight><highlight class="comment">/*<sp/>Noise<sp/>contributions<sp/>from<sp/>the<sp/>five<sp/>corners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skew<sp/>the<sp/>(x,y,z,w)<sp/>space<sp/>to<sp/>determine<sp/>which<sp/>cell<sp/>of<sp/>24<sp/>simplices<sp/>we&apos;re<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>(x<sp/>+<sp/>y<sp/>+<sp/>z<sp/>+<sp/>w)<sp/>*<sp/><ref refid="of_noise_8h_1a7fd7918aa90b0ce1dc7ca9fe7a00e9fb" kindref="member">F4</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Factor<sp/>for<sp/>4D<sp/>skewing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xs<sp/>=<sp/>x<sp/>+<sp/>s;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ys<sp/>=<sp/>y<sp/>+<sp/>s;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zs<sp/>=<sp/>z<sp/>+<sp/>s;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>w<sp/>+<sp/>s;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(xs);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(ys);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(zs);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/><ref refid="of_noise_8h_1ae426292a2a2cac396a07776ed99d6d3f" kindref="member">FASTFLOOR</ref>(ws);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(i<sp/>+<sp/>j<sp/>+<sp/>k<sp/>+<sp/>l)<sp/>*<sp/><ref refid="of_noise_8h_1a6f984a8b01aafc34122cc8bc0d9d5691" kindref="member">G4</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Factor<sp/>for<sp/>4D<sp/>unskewing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>X0<sp/>=<sp/>i<sp/>-<sp/>t;<sp/></highlight><highlight class="comment">/*<sp/>Unskew<sp/>the<sp/>cell<sp/>origin<sp/>back<sp/>to<sp/>(x,y,z,w)<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Y0<sp/>=<sp/>j<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Z0<sp/>=<sp/>k<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>W0<sp/>=<sp/>l<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>x<sp/>-<sp/>X0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>x,y,z,w<sp/>distances<sp/>from<sp/>the<sp/>cell<sp/>origin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>y<sp/>-<sp/>Y0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z0<sp/>=<sp/>z<sp/>-<sp/>Z0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w0<sp/>=<sp/>w<sp/>-<sp/>W0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>4D<sp/>case,<sp/>the<sp/>simplex<sp/>is<sp/>a<sp/>4D<sp/>shape<sp/>I<sp/>won&apos;t<sp/>even<sp/>try<sp/>to<sp/>describe.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>find<sp/>out<sp/>which<sp/>of<sp/>the<sp/>24<sp/>possible<sp/>simplices<sp/>we&apos;re<sp/>in,<sp/>we<sp/>need<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>determine<sp/>the<sp/>magnitude<sp/>ordering<sp/>of<sp/>x0,<sp/>y0,<sp/>z0<sp/>and<sp/>w0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>method<sp/>below<sp/>is<sp/>a<sp/>good<sp/>way<sp/>of<sp/>finding<sp/>the<sp/>ordering<sp/>of<sp/>x,y,z,w<sp/>and<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>find<sp/>the<sp/>correct<sp/>traversal<sp/>order<sp/>for<sp/>the<sp/>simplex<sp/>we&apos;re<sp/>in.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>six<sp/>pair-wise<sp/>comparisons<sp/>are<sp/>performed<sp/>between<sp/>each<sp/>possible<sp/>pair<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>of<sp/>the<sp/>four<sp/>coordinates,<sp/>and<sp/>the<sp/>results<sp/>are<sp/>used<sp/>to<sp/>add<sp/>up<sp/>binary<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>an<sp/>integer<sp/>index.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>(x0<sp/>&gt;<sp/>y0)<sp/>?<sp/>32<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>(x0<sp/>&gt;<sp/>z0)<sp/>?<sp/>16<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c3<sp/>=<sp/>(y0<sp/>&gt;<sp/>z0)<sp/>?<sp/>8<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c4<sp/>=<sp/>(x0<sp/>&gt;<sp/>w0)<sp/>?<sp/>4<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c5<sp/>=<sp/>(y0<sp/>&gt;<sp/>w0)<sp/>?<sp/>2<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c6<sp/>=<sp/>(z0<sp/>&gt;<sp/>w0)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>c1<sp/>+<sp/>c2<sp/>+<sp/>c3<sp/>+<sp/>c4<sp/>+<sp/>c5<sp/>+<sp/>c6;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1,<sp/>j1,<sp/>k1,<sp/>l1;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>integer<sp/>offsets<sp/>for<sp/>the<sp/>second<sp/>simplex<sp/>corner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2,<sp/>j2,<sp/>k2,<sp/>l2;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>integer<sp/>offsets<sp/>for<sp/>the<sp/>third<sp/>simplex<sp/>corner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i3,<sp/>j3,<sp/>k3,<sp/>l3;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>integer<sp/>offsets<sp/>for<sp/>the<sp/>fourth<sp/>simplex<sp/>corner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/>y1,<sp/>z1,<sp/>w1,<sp/>x2,<sp/>y2,<sp/>z2,<sp/>w2,<sp/>x3,<sp/>y3,<sp/>z3,<sp/>w3,<sp/>x4,<sp/>y4,<sp/>z4,<sp/>w4;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>jj,<sp/>kk,<sp/>ll;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0,<sp/>t1,<sp/>t2,<sp/>t3,<sp/>t4;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>simplex[c]<sp/>is<sp/>a<sp/>4-vector<sp/>with<sp/>the<sp/>numbers<sp/>0,<sp/>1,<sp/>2<sp/>and<sp/>3<sp/>in<sp/>some<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Many<sp/>values<sp/>of<sp/>c<sp/>will<sp/>never<sp/>occur,<sp/>since<sp/>e.g.<sp/>x&gt;y&gt;z&gt;w<sp/>makes<sp/>x&lt;z,<sp/>y&lt;w<sp/>and<sp/>x&lt;w<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>impossible.<sp/>Only<sp/>the<sp/>24<sp/>indices<sp/>which<sp/>have<sp/>non-zero<sp/>entries<sp/>make<sp/>any<sp/>sense.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>a<sp/>thresholding<sp/>to<sp/>set<sp/>the<sp/>coordinates<sp/>in<sp/>turn<sp/>from<sp/>the<sp/>largest<sp/>magnitude.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>3<sp/>in<sp/>the<sp/>&quot;simplex&quot;<sp/>array<sp/>is<sp/>at<sp/>the<sp/>position<sp/>of<sp/>the<sp/>largest<sp/>coordinate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>i1<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][0]&gt;=3<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>j1<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][1]&gt;=3<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>k1<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][2]&gt;=3<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>l1<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][3]&gt;=3<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>2<sp/>in<sp/>the<sp/>&quot;simplex&quot;<sp/>array<sp/>is<sp/>at<sp/>the<sp/>second<sp/>largest<sp/>coordinate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>i2<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][0]&gt;=2<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>j2<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][1]&gt;=2<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>k2<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][2]&gt;=2<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>l2<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][3]&gt;=2<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>1<sp/>in<sp/>the<sp/>&quot;simplex&quot;<sp/>array<sp/>is<sp/>at<sp/>the<sp/>second<sp/>smallest<sp/>coordinate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>i3<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][0]&gt;=1<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>j3<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][1]&gt;=1<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>k3<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][2]&gt;=1<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>l3<sp/>=<sp/><ref refid="of_noise_8h_1a7f47fa40493dcc75de51931a833927f4" kindref="member">simplex</ref>[c][3]&gt;=1<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>fifth<sp/>corner<sp/>has<sp/>all<sp/>coordinate<sp/>offsets<sp/>=<sp/>1,<sp/>so<sp/>no<sp/>need<sp/>to<sp/>look<sp/>that<sp/>up.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0<sp/>-<sp/>i1<sp/>+<sp/><ref refid="of_noise_8h_1a6f984a8b01aafc34122cc8bc0d9d5691" kindref="member">G4</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>second<sp/>corner<sp/>in<sp/>(x,y,z,w)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0<sp/>-<sp/>j1<sp/>+<sp/>G4;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>z1<sp/>=<sp/>z0<sp/>-<sp/>k1<sp/>+<sp/>G4;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>w1<sp/>=<sp/>w0<sp/>-<sp/>l1<sp/>+<sp/>G4;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>x0<sp/>-<sp/>i2<sp/>+<sp/>2.0f*G4;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>third<sp/>corner<sp/>in<sp/>(x,y,z,w)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>y0<sp/>-<sp/>j2<sp/>+<sp/>2.0f*G4;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>z2<sp/>=<sp/>z0<sp/>-<sp/>k2<sp/>+<sp/>2.0f*G4;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>w2<sp/>=<sp/>w0<sp/>-<sp/>l2<sp/>+<sp/>2.0f*G4;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>x3<sp/>=<sp/>x0<sp/>-<sp/>i3<sp/>+<sp/>3.0f*G4;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>fourth<sp/>corner<sp/>in<sp/>(x,y,z,w)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>y3<sp/>=<sp/>y0<sp/>-<sp/>j3<sp/>+<sp/>3.0f*G4;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>z3<sp/>=<sp/>z0<sp/>-<sp/>k3<sp/>+<sp/>3.0f*G4;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>w3<sp/>=<sp/>w0<sp/>-<sp/>l3<sp/>+<sp/>3.0f*G4;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>x4<sp/>=<sp/>x0<sp/>-<sp/>1.0f<sp/>+<sp/>4.0f*G4;<sp/></highlight><highlight class="comment">/*<sp/>Offsets<sp/>for<sp/>last<sp/>corner<sp/>in<sp/>(x,y,z,w)<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>y4<sp/>=<sp/>y0<sp/>-<sp/>1.0f<sp/>+<sp/>4.0f*G4;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>z4<sp/>=<sp/>z0<sp/>-<sp/>1.0f<sp/>+<sp/>4.0f*G4;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>w4<sp/>=<sp/>w0<sp/>-<sp/>1.0f<sp/>+<sp/>4.0f*G4;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wrap<sp/>the<sp/>integer<sp/>indices<sp/>at<sp/>256,<sp/>to<sp/>avoid<sp/>indexing<sp/>perm[]<sp/>out<sp/>of<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>i<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>j<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>kk<sp/>=<sp/>k<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>l<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>contribution<sp/>from<sp/>the<sp/>five<sp/>corners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>0.6f<sp/>-<sp/>x0*x0<sp/>-<sp/>y0*y0<sp/>-<sp/>z0*z0<sp/>-<sp/>w0*w0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t0<sp/>&lt;<sp/>0.0f)<sp/>n0<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>*=<sp/>t0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>t0<sp/>*<sp/>t0<sp/>*<sp/><ref refid="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" kindref="member">grad4</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ll]]]],<sp/>x0,<sp/>y0,<sp/>z0,<sp/>w0);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>0.6f<sp/>-<sp/>x1*x1<sp/>-<sp/>y1*y1<sp/>-<sp/>z1*z1<sp/>-<sp/>w1*w1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t1<sp/>&lt;<sp/>0.0f)<sp/>n1<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>*=<sp/>t1;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>t1<sp/>*<sp/>t1<sp/>*<sp/><ref refid="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" kindref="member">grad4</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+i1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+j1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+k1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ll+l1]]]],<sp/>x1,<sp/>y1,<sp/>z1,<sp/>w1);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>t2<sp/>=<sp/>0.6f<sp/>-<sp/>x2*x2<sp/>-<sp/>y2*y2<sp/>-<sp/>z2*z2<sp/>-<sp/>w2*w2;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t2<sp/>&lt;<sp/>0.0f)<sp/>n2<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>*=<sp/>t2;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>t2<sp/>*<sp/>t2<sp/>*<sp/><ref refid="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" kindref="member">grad4</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+i2+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+j2+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+k2+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ll+l2]]]],<sp/>x2,<sp/>y2,<sp/>z2,<sp/>w2);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/>t3<sp/>=<sp/>0.6f<sp/>-<sp/>x3*x3<sp/>-<sp/>y3*y3<sp/>-<sp/>z3*z3<sp/>-<sp/>w3*w3;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t3<sp/>&lt;<sp/>0.0f)<sp/>n3<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t3<sp/>*=<sp/>t3;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n3<sp/>=<sp/>t3<sp/>*<sp/>t3<sp/>*<sp/><ref refid="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" kindref="member">grad4</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+i3+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+j3+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+k3+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ll+l3]]]],<sp/>x3,<sp/>y3,<sp/>z3,<sp/>w3);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>t4<sp/>=<sp/>0.6f<sp/>-<sp/>x4*x4<sp/>-<sp/>y4*y4<sp/>-<sp/>z4*z4<sp/>-<sp/>w4*w4;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t4<sp/>&lt;<sp/>0.0f)<sp/>n4<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t4<sp/>*=<sp/>t4;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n4<sp/>=<sp/>t4<sp/>*<sp/>t4<sp/>*<sp/><ref refid="of_noise_8h_1a11f9f644af87c49d50f9fe86baea9bd4" kindref="member">grad4</ref>(<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ii+1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[jj+1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[kk+1+<ref refid="of_noise_8h_1a4dd493b13a563328213f20f0d9ebb43e" kindref="member">perm</ref>[ll+1]]]],<sp/>x4,<sp/>y4,<sp/>z4,<sp/>w4);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sum<sp/>up<sp/>and<sp/>scale<sp/>the<sp/>result<sp/>to<sp/>cover<sp/>the<sp/>range<sp/>[-1,1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>27.0f<sp/>*<sp/>(n0<sp/>+<sp/>n1<sp/>+<sp/>n2<sp/>+<sp/>n3<sp/>+<sp/>n4);<sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>The<sp/>scale<sp/>factor<sp/>is<sp/>preliminary!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/andy/Documents/of_preRelease_v007_osx/libs/openFrameworks/utils/ofNoise.h"/>
  </compounddef>
</doxygen>
